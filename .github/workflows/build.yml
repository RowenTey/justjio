name: Build Docker Images

on:
  pull_request:
    types: [labeled]
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

# Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this workflow.
permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  build-and-push-image:
    if: ${{ github.event.label.name == 'ready_for_build' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            { name: api, directory: server-api },
            { name: ws, directory: server-ws },
            { name: web, directory: client-web },
          ]
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      # transform linux/arm64 into linux-arm64 & linux/arm64 into arm64
      # transform RowenTey/teybot into rowentey/teybot
      - name: Prepare PLATFORM_PAIR & ARCH & REPOSITORY
        run: |
          platform=${{ matrix.platform }}
          repo=${{ github.repository }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "ARCH=${platform#*/}" >> $GITHUB_ENV
          echo "REPOSITORY=${repo,,}" >> $GITHUB_ENV

      # required for path context in docker build push action
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service.name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service.directory }}
          platforms: ${{ matrix.platform }}
          build-args: |
            GOARCH=${{ env.ARCH }}
          push: true
          # can only use repository name if push-by-digest is true
          # see https://github.com/docker/build-push-action/discussions/1213
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service.name }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          # cache layers in Github Actions Cache to speed up builds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.push.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.service.name }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    strategy:
      matrix:
        service:
          - api
          - ws
          - web
    steps:
      # transform RowenTey/teybot into rowentey/teybot
      - name: Prepare REPOSITORY
        run: |
          repo=${{ github.repository }}
          echo "REPOSITORY=${repo,,}" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.service }}-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service }}
          tags: |
            type=sha
            latest

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ matrix.service }}:${{ steps.meta.outputs.version }}

  remove-ready-for-build-label:
    needs: [merge]
    if: ${{ always() && github.event.label.name == 'ready_for_build' }}
    runs-on: ubuntu-latest
    steps:
      - name: Remove `ready_for_build` label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.PAT }}
          labels: ready_for_build

  add-ready-to-merge-label:
    needs: [merge, remove-ready-for-build-label]
    if: ${{ needs.merge.result == 'success' && github.event.label.name == 'ready_for_build' }}
    runs-on: ubuntu-latest
    steps:
      - name: Add `ready_to_merge` label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: ready_to_merge
